{"version":3,"sources":["components/UI/Card.jsx","components/Expenses/ExpensesFilter.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.jsx","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","e","onChosenYear","target","value","currentYear","ExpenseDate","month","date","toLocaleString","year","getFullYear","day","ExpenseItem","title","amount","ExpensesList","filteredExpenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","chosenYear","setChosenYear","filter","toString","newChosenDate","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","event","min","step","onClick","closeForm","NewExpense","addingNewExpense","setAddingNewExpense","enteredExpenseData","random","onAddExpense","Dummy_Expenses","App","setExpenses","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cdde7da.chunk.js","sourcesContent":["import \"./Card.css\";\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const onChangeHandler = (e) => {\r\n    props.onChosenYear(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select onChange={onChangeHandler} value={props.currentYear}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = props.date.getFullYear();\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.filteredExpenses.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.filteredExpenses.map((expense) => {\r\n        return (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointsValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointsValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nfunction Expenses(props) {\r\n  const [chosenYear, setChosenYear] = useState(\"2020\");\r\n\r\n  const expensesFilterHandler = (newChosenDate) => {\r\n    setChosenYear(newChosenDate);\r\n  };\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === chosenYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        onChosenYear={expensesFilterHandler}\r\n        currentYear={chosenYear}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      {filteredExpenses.length > 0 &&\r\n        filteredExpenses.map((expense) => {\r\n          return (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          );\r\n        })}\r\n      <ExpensesList filteredExpenses={filteredExpenses} />\r\n    </Card>\r\n  );\r\n}\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.closeForm}>\r\n          Close\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [addingNewExpense, setAddingNewExpense] = useState(false);\r\n  const expenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setAddingNewExpense(false);\r\n  };\r\n\r\n  const onShowForm = () => {\r\n    setAddingNewExpense(true);\r\n  };\r\n  const onCloseForm = () => {\r\n    setAddingNewExpense(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!addingNewExpense && (\r\n        <div className=\".new-expense__showForm\">\r\n          <button onClick={onShowForm}>Add Expense</button>\r\n        </div>\r\n      )}\r\n      {addingNewExpense && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={expenseDataHandler}\r\n          closeForm={onCloseForm}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nconst Dummy_Expenses = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2020, 2, 28),\r\n  },\r\n  {\r\n    id: \"e2\",\r\n    title: \"Toilet paper\",\r\n    amount: 66.17,\r\n    date: new Date(2021, 1, 22),\r\n  },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Clothes\",\r\n    amount: 194.23,\r\n    date: new Date(2019, 8, 11),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"Maintenance\",\r\n    amount: 1294.61,\r\n    date: new Date(2021, 4, 13),\r\n  },\r\n  {\r\n    id: \"e5\",\r\n    title: \"New Car\",\r\n    amount: 1294.61,\r\n    date: new Date(2011, 1, 23),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(Dummy_Expenses);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => [expense, ...prevExpenses]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses expenses={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}